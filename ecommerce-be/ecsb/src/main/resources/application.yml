server:
  port: 8088

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/ShopApp?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
    username: root
    password: ${MYSQL_ROOT_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  messages:
    basename: i18n/messages
    encoding: UTF-8
    default-locale: en
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  kafka:
    client:
      dns:
        lookup: use_dns_cache
    bootstrap-servers: ${KAFKA_BROKER_SERVER:localhost}:${KAFKA_BROKER_PORT:9092}
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      #transaction-id-prefix: tx.
      properties:
        "[spring.json.type.mapping]": category:thanhnt.ec.ecsb.model.Category
    consumer:
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer

api:
  prefix: api/v1

jwt:
  expiration: 2592000 # 30 days = 30 * 24 * 60 * 60
  secretKey: TgRB1C2JHBZzC7zebA9uSXR3kYoQXUo0yMYINMAHDxI=

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      base-path: /api/v1/actuator
      exposure:
        include: "health, info"