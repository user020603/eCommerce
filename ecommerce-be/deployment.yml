version: '3.7'
services:
  shopapp-spring-container:
    container_name: shopapp-spring-container    
    build:
      context: ./ecsb
      dockerfile: DockerfileJavaSpring
    ports:
      - "8099:8088"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql8-container:3306/ShopApp?serverTimezone=UTC&allowPublicKeyRetrieval=true
      MYSQL_ROOT_PASSWORD: password
      REDIS_HOST: redis-container
      REDIS_PORT: 6379
    depends_on:
      - mysql8-container
    networks:
      - shopapp-network

  mysql8-container:
    container_name: mysql8-container
    image: mysql:latest  
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ShopApp
    ports:
      - "3306:3306"
    volumes: 
      - ./database.sql:/docker-entrypoint-initdb.d/init-script.sql
    networks:
      - shopapp-network

  redis-container:
    image: redis:latest
    container_name: redis-container
    restart: always
    ports:
        - "6379:6379"
    volumes:
      - ./redis-data:/data
    networks:
        - shopapp-network
      
networks:
  shopapp-network:
    name: shopapp-network
    driver: bridge

#docker-compose -f ./deployment.yml down

#docker-compose -f ./deployment.yml rm -s -f mysql8-container
#docker-compose -f ./deployment.yml up -d mysql8-container

#docker-compose -f ./deployment.yml rm -s -f shopapp-spring-container
#docker-compose -f ./deployment.yml up -d shopapp-spring-container
#docker logs shopapp-spring-container

#docker-compose -f ./deployment.yml rm -s -f redis-container
#docker-compose -f ./deployment.yml up -d redis-container